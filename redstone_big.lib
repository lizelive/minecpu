library(redstone) {
  cell("Y=A") {
    area: 6;
    pin(A) { direction: input; }
    pin(Y) { direction: output; function: "A"; }
  }
  cell("Y=!A") {
    area: 6;
    pin(A) { direction: input; }
    pin(Y) { direction: output; function: "!A"; }
  }
  cell("Y=A&B") {
    area: 12;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output; function: "A & B"; }
  }
  cell("Y=!(A&B)") {
    area: 12;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output; function: "!(A & B)"; }
  }
  cell("Y=A+B") {
    area: 12;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output; function: "A | B"; }
  }
  cell("Y=!(A+B)") {
    area: 12;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(Y) { direction: output; function: "!(A | B)"; }
  }
  cell("Y=A&B&C") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "A & B & C"; }
  }
  cell("Y=!(A&B&C)") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "!(A & B & C)"; }
  }
  cell("Y=A+B+C") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "A | B | C"; }
  }
  cell("Y=!(A+B+C)") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "!(A | B | C)"; }
  }
  cell("Y=(A&B)+C") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "(A & B) | C"; }
  }
  cell("Y=(A&B)+!C") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "(A & B) | !C"; }
  }
  cell("Y=!(A&B)+C") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "!(A & B) | C"; }
  }
  cell("Y=!(A&B)+!C") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "!(A & B) | !C"; }
  }
  cell("Y=(A+B)&C") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "(A | B) & C"; }
  }
  cell("Y=!((A+B)&C)") {
    area: 18;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(Y) { direction: output; function: "!((A | B) & C)"; }
  }
  cell("Y=A&B&C&D") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "A & B & C & D"; }
  }
  cell("Y=!(A&B&C&D)") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "!(A & B & C & D)"; }
  }
  cell("Y=A+B+C+D") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "A | B | C | D"; }
  }
  cell("Y=!(A+B+C+D)") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "!(A | B | C | D)"; }
  }
  cell("Y=(A+B)&(C+D)") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "(A | B) & (C | D)"; }
  }
  cell("Y=!((A+B)&(C+D))") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "!((A | B) & (C | D))"; }
  }
  cell("Y=(A&B)+(C&D)") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "(A & B) | (C & D)"; }
  }
  cell("Y=(A&B)+!(C&D)") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "(A & B) | !(C & D)"; }
  }
  cell("Y=!(A&B)+!(C&D)") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "!(A & B) | !(C & D)"; }
  }
  cell("Y=!((A&B)+!(C&D))") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "!((A & B) | !(C & D))"; }
  }
  cell("Y=!(!(A&B)+(C&D))") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "!(!(A & B) | (C & D))"; }
  }
  cell("Y=!(!(A&B)+!(C&D))") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "!(!(A & B) | !(C & D))"; }
  }
  cell("Y=(A+B)&C&D") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "(A | B) & C & D"; }
  }
  cell("Y=!((A+B)&C&D)") {
    area: 24;
    pin(A) { direction: input; }
    pin(B) { direction: input; }
    pin(C) { direction: input; }
    pin(D) { direction: input; }
    pin(Y) { direction: output; function: "!((A | B) & C & D)"; }
  }
  cell(DFF_P) {
    area: 8;
    ff(IQ, IQN) { clocked_on: C; next_state: D; }
    pin(C) { direction: input; clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output; function: "IQ"; }
  }
  cell(DFF_N) {
    area: 8;
    ff(IQ, IQN) { clocked_on: "!C"; next_state: D; }
    pin(C) { direction: input; clock: true; }
    pin(D) { direction: input; }
    pin(Q) { direction: output; function: "IQ"; }
  }
}
