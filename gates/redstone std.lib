library(redstone) {
  cell(buffer) {
    area : 2;
    pin(A) {
      direction : input;
    }
    pin(Y) {
      direction : output;
      function : "A";
    }
  }  

  /* 2-input inverting MUX */
  cell (mux2) {
    area : 20;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(S) {
      direction : input;
    } 
    pin(Y) {
      direction: output;
      function : "(A * S) + (B * S')";
    }
  }

  cell(and2) {
    area: 12
    pin(A) {
      direction: input;
    }
    pin(Y) {
      function: "(A*B)";
      direction: output;
    }
    pin(B) {
      direction: input;
    }
  }

  cell(not) {
    area: 8
    pin(A) {
      direction: input;
    }
    pin(Y) {
      function: "A'";
      direction: output;
    }
  }

  cell(nand2) {
    area: 24
    pin(A) {
      direction: input;
    }
    pin(Y) {
      function: "(A*B)'";
      direction: output;
    }
    pin(B) {
      direction: input;
    }
  }

/* Latch */
  cell(latch) {
    area : 5;
    latch ("IQ","IQN") {
      enable : "G";
      data_in : "D";
    }

    pin(D) {
      direction : input;
    }
    pin(G) {
      direction : input;
    }
 
    pin(Q) {
      direction : output;
      function : "IQ";
      internal_node : "Q";
      
      timing() {
        timing_type : rising_edge;
        intrinsic_rise : 65;
        intrinsic_fall : 65;
        rise_resistance : 0;
        fall_resistance : 0;
        related_pin : "G";
      }
      
      timing() {
        timing_sense : positive_unate;
        intrinsic_rise : 65;
        intrinsic_fall : 65;
        rise_resistance : 0;
        fall_resistance : 0;
        related_pin : "D";
      }
    }
    
    pin(QN) {
      direction : output;
      function : "IQN";
      internal_node : "QN";
      
      timing() {
        timing_type : rising_edge;
        intrinsic_rise : 65;
        intrinsic_fall : 65;
        rise_resistance : 0;
        fall_resistance : 0;
        related_pin : "G";
      }
      
      timing() {
        timing_sense : negative_unate;
        intrinsic_rise : 65;
        intrinsic_fall : 65;
        rise_resistance : 0;
        fall_resistance : 0;
        related_pin : "D";
      }
    }
  }

  /* 2-input NOR gate */
  cell (nor2) {
    area : 3;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A + B)'";
    }
  }

  cell(xor2) {
    area : 24;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A * B') + (A' * B)";
    }
  }

  cell(xnor2) {
    area : 60;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A + B) * (A' + B')";
    }
  }


  cell(d_flip_flop) {
    area: 12
    ff(IQ, IQN) {
      clocked_on: C;
      next_state: D;
    }
    pin(Q) {
      function: "IQ";
      direction: output;
    }
    pin(C) {
      direction: input;
      clock: true;
    }
    pin(D) {
      direction: input;
    }
  }

  /* half adder */
  cell (halfadder) {
    area : 5;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(C) {
      direction : output;
      function  : "(A * B)";
    }    
    pin(Y) {
      direction: output;
      function : "(A *B') + (A' * B)";
    }    
  }

  /* full adder */
  cell (fulladder) {
    area : 8;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(CI) {
      direction : input;
    }    
    pin(CO) {
      direction : output;
      function : "(((A * B)+(B * CI))+(CI * A))";
    }
    pin(Y) {
      direction: output;
      function : "((A^B)^CI)";
    }    
  }
}
