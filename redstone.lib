library(redstone) {
  cell(buffer) {
    area : 2;
    pin(A) {
      direction : input;
    }
    pin(Y) {
      direction : output;
      function : "A";
    }
  }  

  /* 2-input inverting MUX */
  cell (mux2) {
    area : 20;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(S) {
      direction : input;
    } 
    pin(Y) {
      direction: output;
      function : "(A * S) + (B * S')";
    }
  }

  cell(and) {
    area: 12
    pin(A) {
      direction: input;
    }
    pin(Y) {
      function: "(A*B)";
      direction: output;
    }
    pin(B) {
      direction: input;
    }
  }

  cell(not) {
    area: 8
    pin(A) {
      direction: input;
    }
    pin(Y) {
      function: "A'";
      direction: output;
    }
  }

  cell(nand) {
    area: 24
    pin(A) {
      direction: input;
    }
    pin(Y) {
      function: "(A*B)'";
      direction: output;
    }
    pin(B) {
      direction: input;
    }
  }

  cell(xor) {
    area : 24;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A * B') + (A' * B)";
    }
  }

  cell(xnor) {
    area : 60;
    pin(A) {
      direction : input;
    }
    pin(B) {
      direction : input;
    }
    pin(Y) {
      direction: output;
      function : "(A + B) * (A' + B')";
    }
  }


  cell(d_flip_flop) {
    area: 12
    ff(IQ, IQN) {
      clocked_on: C;
      next_state: D;
    }
    pin(Q) {
      function: "IQ";
      direction: output;
    }
    pin(C) {
      direction: input;
      clock: true;
    }
    pin(D) {
      direction: input;
    }
  }

}
